{"version":3,"sources":["components/App.js","index.js"],"names":["App","useState","week","setWeek","newClubName","setNewClubName","dataEle","data","setData","weekday","setWeekday","weekend","setWeekend","handleWeekSelection","ev","console","log","target","id","checked","name","onChange","value","valueSelect","filter","club","openOnWeekdays","map","index","className","openOnWeekend","type","currentTarget","onClick","preventDefault","newClub","ReactDOM","render","document","getElementById"],"mappings":"wNA4HeA,MAtHf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KACA,EAAwBJ,mBAASK,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BP,oBAAS,GAAvC,mBAAOQ,EAAP,KAAgBC,EAAhB,KACA,EAA8BT,oBAAS,GAAvC,mBAAOU,EAAP,KAAgBC,EAAhB,KAkBMC,EAAsB,SAACC,GAC3BC,QAAQC,IAAIF,EAAGG,OAAOC,IACD,YAAjBJ,EAAGG,OAAOC,GACZR,EAAWI,EAAGG,OAAOE,SAErBP,EAAWE,EAAGG,OAAOE,UAkCzB,OACE,gCACE,mCACE,2CACA,4CAEE,yBAAQC,KAAK,SAASF,GAAG,SAASG,SA5DvB,SAACP,GAClBC,QAAQC,IAAIF,EAAGG,OAAOK,OACtB,IAAMC,EAAcT,EAAGG,OAAOK,MAE9B,OADAnB,EAAQoB,GACDhB,EAAKiB,QAAO,SAACC,GAAD,OAAUA,EAAKC,iBAAmBxB,MAwD/C,UACE,wBAAQoB,MAAM,QAAd,mBACA,wBAAQA,MAAM,WAAd,wCACA,wBAAQA,MAAM,WAAd,qDAIN,8BACE,mCAzCGf,EAAKoB,KAAI,SAACF,EAAMG,GACrB,OACE,+BACE,oCAAOH,EAAKL,KAAZ,OACA,mBAAGS,UAAU,wBACb,uDAA0BJ,EAAKC,eAAiB,QAAO,QACvD,2DAA8BD,EAAKK,cAAgB,QAAO,UAJnDF,MAuCT,SAGF,yDAEA,oDAEE,uBACEG,KAAK,OACLX,KAAK,cACLF,GAAG,cACHI,MAAOlB,EACPiB,SAvEkB,SAACP,GACzB,IAAMS,EAAcT,EAAGkB,cAAcV,MACrCjB,EAAekB,SAyEb,uDAEE,uBACEQ,KAAK,WACLX,KAAK,UACLF,GAAG,UACHC,QAASV,EACTY,SAAUR,OAGd,8DAEE,uBACEkB,KAAK,WACLX,KAAK,UACLF,GAAG,UACHC,QAASR,EACTU,SAAUR,OAId,uBAAOkB,KAAK,SAAST,MAAM,0BAAuBW,QAhElC,SAACnB,GACnBA,EAAGoB,iBACH,IAAMC,EAAU,CACdf,KAAMhB,EACNsB,eAAgBjB,EAChBqB,cAAenB,GAEjBH,EAAQ,GAAD,mBAAKD,GAAL,CAAW4B,KAClB9B,EAAe,IACfK,GAAW,GACXE,GAAW,UC7DfwB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.25250cd4.chunk.js","sourcesContent":["// Fichero src/components/App.js\n\nimport \"../styles/App.scss\";\nimport { useState } from \"react\";\nimport dataEle from \"../data/data.json\";\n\nfunction App() {\n  const [week, setWeek] = useState(\"\"); //este es el de options de semana\n  const [newClubName, setNewClubName] = useState(\"\"); //esto para el input donde escribo el club a añadir\n  const [data, setData] = useState(dataEle);\n  const [weekday, setWeekday] = useState(false);\n  const [weekend, setWeekend] = useState(false);\n\n  //esta funcion es para el select\n  const handleWeek = (ev) => {\n    console.log(ev.target.value);\n    const valueSelect = ev.target.value;\n    setWeek(valueSelect);\n    return data.filter((club) => club.openOnWeekdays === week);\n  };\n\n  //esta funcion es para el input de añadir el nuevo club\n\n  const handleNewClubName = (ev) => {\n    const valueSelect = ev.currentTarget.value;\n    setNewClubName(valueSelect);\n  };\n\n  // handle selection for new club\n  const handleWeekSelection = (ev) => {\n    console.log(ev.target.id);\n    if (ev.target.id === \"weekday\") {\n      setWeekday(ev.target.checked);\n    } else {\n      setWeekend(ev.target.checked);\n    }\n  };\n\n  //funcion para pintar los clubes del data json en pantalla\n\n  const renderClubs = () => {\n    return data.map((club, index) => {\n      return (\n        <li key={index}>\n          <p>#0 {club.name} </p>\n          <i className=\"far fa-times-circle\"></i>\n          <p>abierto entre semana: {club.openOnWeekdays ? \"sí\" : \"no\"}</p>\n          <p>abierto el fin de semana: {club.openOnWeekend ? \"sí\" : \"no\"}</p>\n        </li>\n      );\n    });\n  };\n\n  // añadir un  nuevo club tengo que recoger 3 info =>> el nombre y checkboxes\n\n  const handleClick = (ev) => {\n    ev.preventDefault();\n    const newClub = {\n      name: newClubName,\n      openOnWeekdays: weekday,\n      openOnWeekend: weekend,\n    };\n    setData([...data, newClub]);\n    setNewClubName(\"\");\n    setWeekday(false);\n    setWeekend(false);\n  };\n\n  return (\n    <div>\n      <header>\n        <h1>Mis clubs</h1>\n        <label>\n          Mostrar\n          <select name=\"option\" id=\"option\" onChange={handleWeek}>\n            <option value=\"todos\">todos</option>\n            <option value=\"weekDays\">los que abren entre semana</option>\n            <option value=\"weekEnds\">los que abren el fin de semana</option>\n          </select>\n        </label>\n      </header>\n      <div>\n        <ul> {renderClubs()} </ul>\n      </div>\n\n      <h2>Añadir un nuevo club</h2>\n\n      <label>\n        Nombre del club\n        <input\n          type=\"text\"\n          name=\"newClubName\"\n          id=\"newClubName\"\n          value={newClubName}\n          onChange={handleNewClubName}\n        />\n      </label>\n\n      <label>\n        Abre entre semana?\n        <input\n          type=\"checkbox\"\n          name=\"weekDay\"\n          id=\"weekday\"\n          checked={weekday}\n          onChange={handleWeekSelection}\n        />\n      </label>\n      <label>\n        Abre los fines de semana?\n        <input\n          type=\"checkbox\"\n          name=\"weeKend\"\n          id=\"weekend\"\n          checked={weekend}\n          onChange={handleWeekSelection}\n        />\n      </label>\n\n      <input type=\"submit\" value=\"Añadir un nuevo club\" onClick={handleClick} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App.js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}